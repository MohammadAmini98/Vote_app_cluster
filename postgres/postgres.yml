version: "3.9"
services:
  etcd1: &etcd1
    image: docker.dc.afranet.co/mohammadamini00076/patroni:v1.0.0
    networks: [ backend ]
    environment:
      ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      ETCD_INITIAL_CLUSTER_STATE: new
      ETCD_INITIAL_CLUSTER_TOKEN: tutorial
      ETCD_UNSUPPORTED_ARCH: arm64
    container_name: demo-etcd1
    hostname: etcd1
    command: etcd --name etcd1 --initial-advertise-peer-urls http://etcd1:2380
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "postgres-etcd1"

  etcd2:
    <<: *etcd1
    container_name: demo-etcd2
    hostname: etcd2
    command: etcd --name etcd2 --initial-advertise-peer-urls http://etcd2:2380
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "postgres-etcd2"

  etcd3:
    <<: *etcd1
    container_name: demo-etcd3
    hostname: etcd3
    command: etcd --name etcd3 --initial-advertise-peer-urls http://etcd3:2380
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "postgres-etcd2"

  db:
    image: docker.dc.afranet.co/mohammadamini00076/patroni:v1.0.0
    networks: [ backend ]
    env_file: /home/ubuntu/patroni/docker/patroni.env
    hostname: postgres
    container_name: demo-haproxy
    command: haproxy
    environment: &haproxy_env
      ETCDCTL_ENDPOINTS: http://etcd1:2379,http://etcd2:2379,http://etcd3:2379
      PATRONI_ETCD3_HOSTS: "'etcd1:2379','etcd2:2379','etcd3:2379'"
      PATRONI_SCOPE: demo
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "postgres-db"


  patroni1:
    image: docker.dc.afranet.co/mohammadamini00076/patroni:v1.0.0
    networks: [ backend ]
    env_file: /home/ubuntu/patroni/docker/patroni.env
    hostname: patroni1
    container_name: demo-patroni1
    environment:
      <<: *haproxy_env
      PATRONI_NAME: patroni1
    volumes:
      - postgres-data:/var/lib/postgresql/data
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "postgres-patroni1"


  patroni2:
    image: docker.dc.afranet.co/mohammadamini00076/patroni:v1.0.0
    networks: [ backend ]
    env_file: /home/ubuntu/patroni/docker/patroni.env
    hostname: patroni2
    container_name: demo-patroni2
    environment:
      <<: *haproxy_env
      PATRONI_NAME: patroni2
    volumes:
      - postgres-data:/var/lib/postgresql/data
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "postgres-patroni2"


  patroni3:
    image: docker.dc.afranet.co/mohammadamini00076/patroni:v1.0.0
    networks: [ backend ]
    env_file: /home/ubuntu/patroni/docker/patroni.env
    hostname: patroni3
    container_name: demo-patroni3
    environment:
      <<: *haproxy_env
      PATRONI_NAME: patroni3
    volumes:
      - postgres-data:/var/lib/postgresql/data
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "postgres-patroni3"


networks:
  backend:
    attachable: true

volumes:
  postgres-data:

configs:
  haproxy_cfg:
    external: true

